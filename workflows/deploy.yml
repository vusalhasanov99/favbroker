name: remote ssh command
on:
  push:
    branches: [master]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GIT_TOKEN: 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
      PEM_KEY: |
        -----BEGIN RSA PRIVATE KEY-----
        MIIEowIBAAKCAQEAqAH5i48hG1UfO8YS0OswPO0h20UePVa0AOQV1ABPHb4ST38w
        3Y5l6iR3/6xXaQepYYFIPPWf6f4pzj4x5UZ+WIMEmwhGjIdzAgHcETo6JBP8Ossw
        n0HnYww7myLfvmdUfM6wKJWeh0sr37uM6jG0ShP13ENFi3DUpV4JztvZz3hyCLsD
        J+X7Ko+zZf7tBUsHJAsTzHpEINoV3BtCq8Myas4UsxqFK3lBv/j7vNGW+LR/0eNP
        gC2kCd7n66IrOoMyAN34nR4fTzAEDXmcnl9eQ0GZiH6OyOGU26kWv/JV/GtPIdtE
        FslPN225Njllv/SyMcgEaVB4dIdPdfjRngvyowIDAQABAoIBAH5VpdHE2i9Ubf0j
        r8h74jUeV8QrkFatmQPGf4eAh/2kjN5MlXE0//v2WmnerYgkI8FXVvvH8+0fm04k
        RJ7UyHNEajUuHubTf671uQcXUtsIUDXhzvkitJ0teLDqo3bo+oYzYhHSmHfCFgbS
        YF9G6vx9T/bGe0gkmzKSqSts9Ldl7YW7WvG8U3ABxpmnO5e4tx8HBoCChQlSL30X
        EorLfMHQKQYeKZPL3OP/NKlQYi/h2HWiyQLXvqfgVIKvJ0UKcfYV8E0oMjGjAJmE
        X4U27344w7F4+FYpXQglYZe/I4VJTFT7jEZBv+cuMqZstoFKZZhc1aWKm+yss+t1
        DipethkCgYEA9USRprhjpd3r6t1uH+kUPrskzmlInHtrNX3Zk9W2QC9syNdscDkQ
        1MgdzvSHBSl7TZFRQIARzw9R0ORneo99OMqXFQe4bPfvH/hUPQtrKtZKUFylWXOW
        ahxKqD+3jNaip/lEOpxwlwUAt5RYD9UP9B13/cJ97Upn6DbvI/SYxAUCgYEAr1v0
        3s0hvKLETItMhVMsHR7+Zc4Igo/lDTkV6LyoojoQ9LiFdKYpu4Hw7/MjDlswcleI
        +D6Ph+mAkEMW623zYwfOPsqn6rbvAsfUBi47RBGTA1J2YVI69WE2ebHfH7W5hIDV
        PgH65FuD7nSZ8KWYw/IGfWE3op9RKQX2uZDihIcCgYAz3NX3rRHVJwIV3dDFiqGv
        Sh9UTkr+W9KlswDpE82/8MdOCM9zQ33doJs9AdPzMXxTQKEvxGT/pbulMkb3UZQn
        CB++YK2MzTiRSA94AQweOMXqDE0ihyCNO4JF5YNIkrI+VqUox5+/L12hdArS/jir
        Y/fVfuTl4k/qeINE1RngiQKBgQCp/z5io4AaK7ya68ux0FCKppo+vT64u6B0civQ
        JNxh8GKxqxQNYmxAj5awNwd8CmDr5/orlhJ00qPEtpVIhJ2XGmERtEqWmuMX0fq0
        RytDMLpRVSbX7+yiJqy1yv6f8f63+mE/LJI5wJIkn7sAdLik9ELgV1ek+kemulZV
        zKQbjwKBgFLuknXOdDJYyS6c7wZOt82BIfeVf0UHJOKnyoym9PmpC9lbctTePRvj
        h2R3nupHy923LYQ2c6/92MyPgWKr/2Pih2WtHm+Sk/9XCgyUgWgvjEleakdE9XMA
        andn2TtgpxwjUAaQ0wQWkNvTG367ZADDAcSIRAoOF9P+MxPQakyK
        -----END RSA PRIVATE KEY-----
    steps:
    - name: checkout
      uses: actions/checkout@v1 # Checkout the repository code

    - name: connect remote server
      uses: appleboy/ssh-action@master
      with:
        host: 3.80.45.132
        username: ubuntu
        key:  ${{ env.PEM_KEY }}
        port: 22
        script: |
          whoami # Display the current user for debugging purposes
          
          # Set up repository variables
          REPO_NAME=$(echo ${{ github.repository }} | cut -d'/' -f2)
          REPO_DIR="/var/www/$REPO_NAME"
          
          # Generate a random port number
          RANDOM_PORT=$(shuf -i 2000-50000 -n 1)
          
          
          # Check and update the repository
          if [ -d "$REPO_DIR" ]; then
            echo "Repository exists. Pulling the latest changes."
            cd $REPO_DIR
            sudo git pull
          else
            echo "Repository does not exist. Cloning the repository."
            sudo git clone https://rovshanguli:${{ env.GIT_TOKEN }}@github.com/${{ github.repository }}.git $REPO_NAME
            echo "GitHub reposu başarıyla klonlandı"
            cd $REPO_NAME
          fi
          
          # Define the publish directory
          PUBLISH_DIR="/var/www/${REPO_NAME}build"
          
          # Publish the .NET project
          sudo dotnet publish -c "Release" -o $PUBLISH_DIR
          
          
          # Check and manage the systemd service
          SERVICE_FILE="/etc/systemd/system/$REPO_NAME.service"
          if systemctl --quiet is-active $REPO_NAME; then
            echo "Service exists. Restarting the service."
            sudo systemctl restart $REPO_NAME
          else
            # Create the systemd service configuration
            echo "[Unit]
            Description=$REPO_NAME Service
            [Service]
            WorkingDirectory=$PUBLISH_DIR
            ExecStart=/usr/bin/dotnet $PUBLISH_DIR/CybergAgency.dll --urls http://localhost:$RANDOM_PORT
            Restart=always
            RestartSec=10
            SyslogIdentifier=$REPO_NAME
            User=www-data
            Environment=ASPNETCORE_ENVIRONMENT=Production

            [Install]
            WantedBy=multi-user.target" | sudo tee $SERVICE_FILE

            # Reload systemd to apply new service
            sudo systemctl daemon-reload
            
            # Enable and start the new service
            sudo systemctl enable $REPO_NAME
            sudo systemctl start $REPO_NAME
          fi

          # Set up NGINX configuration
          NGINX_CONFIG="/etc/nginx/sites-available/$REPO_NAME"
          NGINX_LINK="/etc/nginx/sites-enabled/$REPO_NAME"

          # Create NGINX configuration
          echo "server {
          listen 80;
          server_name $REPO_NAME.com www.$REPO_NAME.com;
          location / {
          proxy_pass http://localhost:$RANDOM_PORT;
          proxy_http_version 1.1;
          proxy_set_header Upgrade \$http_upgrade;
          proxy_set_header Connection keep-alive;
          proxy_set_header Host \$host;
          proxy_cache_bypass \$http_upgrade;
          }

          location /assets/ {
          alias $PUBLISH_DIR/wwwroot/assets/;
          }
          }" | sudo tee $NGINX_CONFIG

          # Manage NGINX symlink
          if [ -L $NGINX_LINK ]; then
            echo "NGINX configuration exists. Skipping symlink creation."
          else
            echo "Creating symlink for NGINX configuration."
            sudo ln -s $NGINX_CONFIG $NGINX_LINK
          fi

          # Test and reload NGINX
          if sudo nginx -t; then
            echo "NGINX configuration is valid. Restarting NGINX."
            sudo systemctl reload nginx
          else
            echo "NGINX configuration error. Aborting."
            exit 1
          fi

          echo "REPO_NAME: $REPO_NAME"
          echo "REPO_DIR: $REPO_DIR"
          echo "PUBLISH_DIR: $PUBLISH_DIR"
          echo "RANDOM_PORT: $RANDOM_PORT"
          echo "SERVICE_FILE: $SERVICE_FILE"
          echo "NGINX_CONFIG: $NGINX_CONFIG"
          echo "NGINX_LINK: $NGINX_LINK"
